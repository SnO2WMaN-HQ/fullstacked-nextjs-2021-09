schema {
  query: Query
  mutation: Mutation
}

type CreateTempAccountPayload {
  token: String!
  expiredAt: DateTime!
}

scalar DateTime

type FindUserPayload {
  user: User
}

type Mutation {
  CreateTempUser(email: String!, alias: String!, password: String!, displayName: String): CreateTempAccountPayload!
  RegisterUser(token: String!, code: String!): RegisterAccountPayload!
  ResendVerificationEmail(token: String!): ResendVerificationEmailPayload!
  RefreshToken(accessToken: String!, refreshToken: String!): RefreshTokenPayload!
}

type Query {
  User(id: ID!): User!
  FindUser(alias: ID!): FindUserPayload!
  AllUsers: [User!]!
  Viewer: User!
}

type RefreshTokenPayload {
  accessToken: String!
  refreshToken: String!
}

type RegisterAccountPayload {
  accessToken: String!
  refreshToken: String!
}

type ResendVerificationEmailPayload {
  expiredAt: DateTime!
}

type User {
  id: ID!
  alias: ID!
  email: String!
  displayName: String!
}
